import static org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id "com.dorongold.task-tree" version "1.3"
    id "com.moowork.node" version "1.2.0"
}

node {
    version = "8.11.1"
    npmVersion = "5.8.0"
    download = true
    nodeModulesDir = file("${project.projectDir}")
}

project.version = "0.1.x"
project.group = "org.alleninstitute.aics"

ext {
    env = System.getenv("DEPLOYMENT_ENV") ?: "dev"
    npmBin = "${projectDir}/node_modules/.bin"
}

task wrapper(type: Wrapper) {
    gradleVersion "4.5.1"
    setDistributionType(DistributionType.ALL)
}

task lint(type: NodeTask) {
    dependsOn npmInstall

    script =  file("${npmBin}/tslint")
    FileTree tsFiles = fileTree(dir: "src", includes: ["**/*.ts", "**/*.tsx"])
    args = ["-c", "tslint.json"] + tsFiles.asList()
}

task buildRenderer(type: NodeTask) {
    script = file("${npmBin}/webpack")
    args = ["--config", "./webpack/webpack.renderer.js"]
}

task buildMain(type: NodeTask) {
    script = file("${npmBin}/webpack")
    args = ["--config", "./webpack/webpack.main.js"]
}

task dev(type: NodeTask) {
    environment = [NODE_ENV: "development", START_MAIN: 1]

    script = file("${npmBin}/webpack-dev-server")
    args = ["--config", "webpack/webpack.renderer.js"]
}

task main(type: NodeTask) {
    dependsOn buildMain
    environment = [NODE_ENV: "development", START_MAIN: 1]

    script = file("${npmBin}/electron")
    args = ["dist/main.js"]
}

task test(type: NodeTask) {
    dependsOn npmInstall

    environment = [TS_NODE_PROJECT: "tsconfig.commonjs.json", NODE_ENV: "production"]
    script = file("${npmBin}/mocha")
    args = ["--opts", "mocha.opts", "src/**/test/*.{ts,tsx}"]
}

///////////////////////////
// Build and publish
//////////////////////////

task bundle(type: NodeTask) {
    dependsOn npmInstall
    script = file("${npmBin}/webpack")
    args = ["--config", "./webpack/webpack.config.js", "--env.env", env]
}
